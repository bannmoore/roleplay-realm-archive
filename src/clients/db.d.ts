/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Channels {
  active: Generated<boolean>;
  createdAt: Generated<Timestamp>;
  discordId: string;
  id: Generated<Int8>;
  lastSyncedAt: Timestamp | null;
  name: string;
  serverId: Int8;
  updatedAt: Generated<Timestamp>;
}

export interface Messages {
  authorId: Int8;
  channelId: Int8;
  content: string | null;
  createdAt: Generated<Timestamp>;
  discordId: string;
  discordPublishedAt: Timestamp;
  id: Generated<Int8>;
  isThread: Generated<boolean>;
  threadId: Int8 | null;
  updatedAt: Generated<Timestamp>;
}

export interface MessagesAttachments {
  createdAt: Generated<Timestamp>;
  discordId: string;
  height: number | null;
  id: Generated<Int8>;
  messageId: Int8;
  storagePath: string;
  width: number | null;
}

export interface Servers {
  active: Generated<boolean>;
  createdAt: Generated<Timestamp>;
  discordId: string;
  iconHash: string | null;
  id: Generated<Int8>;
  name: string;
  updatedAt: Generated<Timestamp>;
}

export interface ServersUsers {
  serverId: Int8;
  userId: Int8;
}

export interface Sessions {
  createdAt: Generated<Timestamp>;
  expiresAt: Timestamp;
  token: string;
  userId: Int8 | null;
}

export interface Users {
  createdAt: Generated<Timestamp>;
  discordId: string;
  discordUsername: string;
  id: Generated<Int8>;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  channels: Channels;
  messages: Messages;
  messagesAttachments: MessagesAttachments;
  servers: Servers;
  serversUsers: ServersUsers;
  sessions: Sessions;
  users: Users;
}
